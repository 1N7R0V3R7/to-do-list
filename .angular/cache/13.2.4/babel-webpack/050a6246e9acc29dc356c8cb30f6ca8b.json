{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nconst _c0 = function (a0) {\n  return {\n    \"line-through\": a0\n  };\n};\n\nfunction ListItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function ListItemComponent_div_3_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.triggerUpdate($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.todoItem.check));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.todoItem.task, \" \");\n  }\n}\n\nfunction ListItemComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ListItemComponent_ng_template_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updatedTask = $event;\n    })(\"focus\", function ListItemComponent_ng_template_4_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.getNewTask($event);\n    })(\"blur\", function ListItemComponent_ng_template_4_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.updateTask($event);\n    })(\"keydown.enter\", function ListItemComponent_ng_template_4_Template_input_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.updateTask($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.updatedTask);\n  }\n}\n\nexport let ListItemComponent = /*#__PURE__*/(() => {\n  class ListItemComponent {\n    constructor() {\n      this.remove = new EventEmitter();\n      this.check = new EventEmitter();\n      this.update = new EventEmitter();\n      this.updateFlag = false;\n    }\n\n    ngOnInit() {}\n\n    removeTask(event) {\n      this.remove.emit(this.todoItem.task);\n    }\n\n    checkTask(event) {\n      this.todoItem.check = !this.todoItem.check;\n      this.check.emit(this.todoItem);\n    }\n\n    triggerUpdate(event) {\n      this.updateFlag = !this.updateFlag;\n      this.updatedTask = this.todoItem.task;\n    }\n\n    getNewTask(event) {\n      this.todoItem.task = this.updatedTask;\n    }\n\n    updateTask(event) {\n      this.updateFlag = !this.updateFlag;\n      this.update.emit({\n        originalTask: this.todoItem.task,\n        newTask: this.updatedTask,\n        check: this.todoItem.check\n      });\n    }\n\n  }\n\n  ListItemComponent.ɵfac = function ListItemComponent_Factory(t) {\n    return new (t || ListItemComponent)();\n  };\n\n  ListItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListItemComponent,\n    selectors: [[\"app-list-item\"]],\n    inputs: {\n      todoItem: \"todoItem\"\n    },\n    outputs: {\n      remove: \"remove\",\n      check: \"check\",\n      update: \"update\"\n    },\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"grid\", \"grid-cols-3\", \"gap-2\", \"my-8\"], [1, \"col-span-2\", \"grid\", \"grid-cols-6\", \"items-center\"], [1, \"w-3\", \"h-3\", \"rounded-full\", \"my-auto\", \"bg-customBlue\"], [\"class\", \"col-span-5 break-words font-bold decoration-4 text-[1.3rem]\", 3, \"ngClass\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"updateInput\", \"\"], [1, \"col-span-1\", \"flex\", \"self-start\", \"justify-between\", \"xs:justify-evenly\", \"my-auto\"], [1, \"btn\", 3, \"click\"], [\"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", \"id\", \"svg\", 1, \"h-6\", \"w-6\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M5 13l4 4L19 7\", \"id\", \"path\"], [1, \"btn\", \"bg-customRed\", 3, \"click\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\", \"id\", \"path\"], [1, \"col-span-5\", \"break-words\", \"font-bold\", \"decoration-4\", \"text-[1.3rem]\", 3, \"ngClass\", \"click\"], [\"type\", \"text\", \"autofocus\", \"\", 1, \"rounded-md\", \"bg-customYellow\", \"focus:outline\", \"focus:outline-customYellow\", \"focus:ring\", \"focus:ring-customYellow\", \"w-full\", \"col-span-5\", \"break-all\", 3, \"ngModel\", \"ngModelChange\", \"focus\", \"blur\", \"keydown.enter\"]],\n    template: function ListItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵtemplate(3, ListItemComponent_div_3_Template, 2, 4, \"div\", 3);\n        i0.ɵɵtemplate(4, ListItemComponent_ng_template_4_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ListItemComponent_Template_button_click_7_listener($event) {\n          return ctx.checkTask($event);\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 7);\n        i0.ɵɵelement(9, \"path\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ListItemComponent_Template_button_click_10_listener($event) {\n          return ctx.removeTask($event);\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(11, \"svg\", 7);\n        i0.ɵɵelement(12, \"path\", 10);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.updateFlag)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i1.NgIf, i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\"]\n  });\n  return ListItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}