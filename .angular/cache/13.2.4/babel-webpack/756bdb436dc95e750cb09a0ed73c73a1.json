{"ast":null,"code":"import { ToDo } from './ToDo.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./list-item/list-item.component\";\n\nfunction AppComponent_app_list_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-list-item\", 7);\n    i0.ɵɵlistener(\"remove\", function AppComponent_app_list_item_7_Template_app_list_item_remove_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.removeTodo($event);\n    })(\"check\", function AppComponent_app_list_item_7_Template_app_list_item_check_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateLocalStorage();\n    })(\"update\", function AppComponent_app_list_item_7_Template_app_list_item_update_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateTodo($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"todoItem\", todo_r1);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.localItem = localStorage.getItem(\"list\");\n\n      if (this.localItem === null) {\n        this.TodoList = [];\n      } else {\n        let tempList = JSON.parse(this.localItem);\n        this.TodoList = tempList.map(todoEntry => new ToDo(todoEntry.task, todoEntry.check));\n      }\n    }\n\n    addTodo() {\n      if (this.newTask === '' || this.newTask === null || this.newTask === undefined) {\n        alert(\"Enter a valid argument!\");\n        return;\n      }\n\n      this.TodoList.push({\n        task: this.newTask,\n        check: false\n      });\n      this.newTask = '';\n      this.updateLocalStorage();\n    }\n\n    updateLocalStorage() {\n      localStorage.setItem(\"list\", JSON.stringify(this.TodoList));\n    }\n\n    clearTodo() {\n      this.TodoList = [];\n      this.updateLocalStorage();\n    }\n\n    removeTodo(tastToRemove) {\n      this.TodoList = this.TodoList.filter(todo => todo.task !== tastToRemove);\n      this.updateLocalStorage();\n    }\n\n    checkTodo(taskToCheck) {\n      this.updateLocalStorage();\n    }\n\n    updateTodo(taskToUpdate) {\n      let index = this.TodoList.findIndex(todo => todo.task === taskToUpdate.originalTask);\n      this.TodoList[index] = {\n        task: taskToUpdate.newTask,\n        check: taskToUpdate.check\n      };\n      this.updateLocalStorage();\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"container\", \"mx-auto\", \"max-w-lg\"], [\"id\", \"title\", 1, \"text-center\", \"text-3xl\", \"font-bold\", \"pb-12\"], [1, \"grid\", \"grid-cols-3\", \"gap-2\"], [\"type\", \"text\", 1, \"rounded-md\", \"pl-2\", \"shadow-customShadow\", \"w-full\", \"mr-1\", \"col-span-2\", \"focus:outline\", \"focus:outline-customYellow\", \"focus:ring\", \"focus:ring-customYellow\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [1, \"addBtn\", 3, \"click\"], [3, \"todoItem\", \"remove\", \"check\", \"update\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-customRed\", \"text-customWhite\", \"w-full\", \"rounded-md\", \"py-1\", \"my-12\", \"shadow-customShadow\", \"font-bold\", 3, \"click\"], [3, \"todoItem\", \"remove\", \"check\", \"update\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" To-Do List \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.newTask = $event;\n        })(\"keydown.enter\", function AppComponent_Template_input_keydown_enter_4_listener() {\n          return ctx.addTodo();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n          return ctx.addTodo();\n        });\n        i0.ɵɵtext(6, \"Add\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, AppComponent_app_list_item_7_Template, 1, 1, \"app-list-item\", 5);\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.clearTodo();\n        });\n        i0.ɵɵtext(9, \"Clear All\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTask);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.TodoList);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i3.ListItemComponent],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}